@page "/expenses"
@using SuperPlan.Models
@inject Services.ExpenseService ExpenseService

<h1>Expenses</h1>

<p><button @onclick="ShowAddExpenseModal">Add Expense</button></p>

<!-- Modal -->
<div class="modal" style="display: @(showAddExpenseModal ? "block" : "none")">
    <div class="modal-content">
        <h2>Add Expense</h2>

        <div>
            <label for="description">Description:</label>
            <input type="text" id="description" @bind="@newExpense.Description" />
        </div>

        <div>
            <label for="amount">Amount:</label>
            <input type="number" id="amount" @bind="@newExpense.Amount" />
        </div>

        <div>
            <label for="date">Date:</label>
            <input type="date" id="date" @bind="@newExpense.Date" />
        </div>

        <div>
            <label for="paymentMethod">Payment Method:</label>
            <input type="text" id="paymentMethod" @bind="@newExpense.PaymentMethod" />
        </div>

        <div>
            <label for="category">Category:</label>
            <input type="text" id="category" @bind="@newExpense.Category" />
        </div>

        <div>
            <label for="month">Month:</label>
            <input type="number" id="month" @bind="@newExpense.Month" />
        </div>

        <div class="modal-buttons">
            <button @onclick="AddExpense">Save</button>
            <button @onclick="CancelAddExpense">Cancel</button>
        </div>
    </div>
</div>

@if (expenseList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Description</th>
            <th>Amount</th>
            <th>Date</th>
            <th>Payment Method</th>
            <th>Category</th>
            <th>Month</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var expense in expenseList)
        {
            <tr>
                <td>@expense.Description</td>
                <td>@expense.Amount</td>
                <td>@expense.Date.ToShortDateString()</td>
                <td>@expense.PaymentMethod</td>
                <td>@expense.Category</td>
                <td>@expense.Month</td>
                <td>
                    <button @onclick="() => EditExpense(expense)">Edit</button>
                    <button @onclick="() => DeleteExpense(expense.Id)">Delete</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private List<Expense> expenseList;
    private Expense newExpense = new Expense();
    private bool showAddExpenseModal = false;

    protected override async Task OnInitializedAsync()
    {
        expenseList = await ExpenseService.GetExpensesAsync();
    }

    private async Task AddExpense()
    {
        await ExpenseService.AddExpenseAsync(newExpense);
        expenseList = await ExpenseService.GetExpensesAsync();
        newExpense = new Expense();
        showAddExpenseModal = false;
    }

    private void CancelAddExpense()
    {
        newExpense = new Expense();
        showAddExpenseModal = false;
    }

    private void ShowAddExpenseModal()
    {
        showAddExpenseModal = true;
    }

    private async Task EditExpense(Expense expense)
    {
        await ExpenseService.EditExpenseAsync(expense);
        expenseList = await ExpenseService.GetExpensesAsync();
    }

    private async Task DeleteExpense(int id)
    {
        await ExpenseService.DeleteExpenseAsync(id);
        expenseList = await ExpenseService.GetExpensesAsync();
    }
}