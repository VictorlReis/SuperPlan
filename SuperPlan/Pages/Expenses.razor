@page "/expenses"
@using SuperPlan.Models
@inject Services.ExpenseService ExpenseService

<h1>Expenses</h1>

<p><button @onclick="AddExpense">Add Expense</button></p>

@if (ExpensesList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Description</th>
            <th>Amount</th>
            <th>Date</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var expense in ExpensesList)
        {
            <tr>
                <td>@expense.Description</td>
                <td>@expense.Amount</td>
                <td>@expense.Date.ToShortDateString()</td>
                <td>
                    <button @onclick="() => EditExpense(expense)">Edit</button>
                    <button @onclick="() => DeleteExpense(expense.Id)">Delete</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private List<Expense> ExpensesList;

    protected override async Task OnInitializedAsync()
    {
        ExpensesList = await ExpenseService.GetExpensesAsync();
    }

    private async Task AddExpense()
    {
    // Here you can add the code to add an expense.
    // Since it's likely to be an async operation, you should await it
    }

    private async Task EditExpense(Expense expense)
    {
    // Here you can add the code to edit an expense.
    // Since it's likely to be an async operation, you should await it
        ExpensesList = await ExpenseService.GetExpensesAsync();
    }

    private async Task DeleteExpense(int id)
    {
        await ExpenseService.DeleteExpenseAsync(id);
        ExpensesList = await ExpenseService.GetExpensesAsync();
    }
}

